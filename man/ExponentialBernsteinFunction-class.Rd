% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s4-ExponentialBernsteinFunction.R
\docType{class}
\name{ExponentialBernsteinFunction-class}
\alias{ExponentialBernsteinFunction-class}
\alias{ExponentialBernsteinFunction}
\title{Class for Exponential Bernstein functions}
\description{
For the Exponential jump CPP subordinator with \eqn{\lambda > 0},
the corresponding Bernstein function is
\deqn{
  \psi(x) = \frac{x}{x + \lambda}, x>0.
}
}
\details{
For the Exponential jump CPP Bernstein function, the higher order
alternating iterated forward differences are known in closed form:
\deqn{
  {(-1)}^{k-1} \Delta^k \psi(x)
   = \lambda \cdot B(k+1, x+\lambda), x>0, k>0 .
}

This Bernstein function is no. 4 in the list of complete Bernstein functions
in Chp. 16 of \insertCite{Schilling2012a}{rmo}.
\subsection{Lévy density}{

\deqn{
  \nu(du)
    = \lambda \operatorname{e}^{-\lambda u}, \quad u > 0 .
}
}

\subsection{Stieltjes density}{

\deqn{
  \sigma(du)
    = \delta_{\lambda}(du), \quad u > 0 .
}
}
}
\section{Slots}{

\describe{
\item{\code{lambda}}{The index \eqn{\lambda}.}
}}

\examples{
# Create an object of class ExponentialBernsteinFunction
ExponentialBernsteinFunction()
ExponentialBernsteinFunction(lambda = 0.5)

# Create a Lévy density
bf <- ExponentialBernsteinFunction(lambda = 0.7)
levy_density <- levyDensity(bf)
integrate(
  function(x) pmin(1, x) * levy_density(x),
  lower = attr(levy_density, "lower"),
  upper = attr(levy_density, "upper")
)

# Create a Stieltjes density
bf <- ExponentialBernsteinFunction(lambda = 0.5)
stieltjes_density <- stieltjesDensity(bf)
sum(stieltjes_density$y * 1/(1 + stieltjes_density$x))

# Evaluate the Bernstein function
bf <- ExponentialBernsteinFunction(lambda = 0.3)
valueOf(bf, 1:5)

# Calculate shock-arrival intensities
bf <- ExponentialBernsteinFunction(lambda = 0.8)
intensities(bf, 3)
intensities(bf, 3, method = "levy")
intensities(bf, 3, tolerance = 1e-4)

# Calculate exchangeable shock-arrival intensities
bf <- ExponentialBernsteinFunction(lambda = 0.4)
uexIntensities(bf, 3)
uexIntensities(bf, 3, method = "levy")
uexIntensities(bf, 3, tolerance = 1e-4)

# Calculate exchangeable shock-size arrival intensities
bf <- ExponentialBernsteinFunction(lambda = 0.2)
exIntensities(bf, 3)
exIntensities(bf, 3, method = "levy")
exIntensities(bf, 3, tolerance = 1e-4)

# Calculate the Markov generator
bf <- ExponentialBernsteinFunction(lambda = 0.6)
exQMatrix(bf, 3)
exQMatrix(bf, 3, method = "levy")
exQMatrix(bf, 3, tolerance = 1e-4)
}
\references{
\insertAllCited{}
}
\seealso{
\code{\link[=levyDensity]{levyDensity()}}, \code{\link[=stieltjesDensity]{stieltjesDensity()}}, \code{\link[=valueOf]{valueOf()}},
\code{\link[=intensities]{intensities()}}, \code{\link[=uexIntensities]{uexIntensities()}}, \code{\link[=exIntensities]{exIntensities()}}, \code{\link[=exQMatrix]{exQMatrix()}},
\code{\link[=rextmo]{rextmo()}}, \code{\link[=rpextmo]{rpextmo()}}

Other Bernstein function classes: 
\code{\link{AlphaStableBernsteinFunction-class}},
\code{\link{BernsteinFunction-class}},
\code{\link{CompleteBernsteinFunction-class}},
\code{\link{CompositeScaledBernsteinFunction-class}},
\code{\link{ConstantBernsteinFunction-class}},
\code{\link{ConvexCombinationOfBernsteinFunctions-class}},
\code{\link{GammaBernsteinFunction-class}},
\code{\link{InverseGaussianBernsteinFunction-class}},
\code{\link{LevyBernsteinFunction-class}},
\code{\link{LinearBernsteinFunction-class}},
\code{\link{ParetoBernsteinFunction-class}},
\code{\link{PoissonBernsteinFunction-class}},
\code{\link{ScaledBernsteinFunction-class}},
\code{\link{SumOfBernsteinFunctions-class}}

Other Levy Bernstein function classes: 
\code{\link{AlphaStableBernsteinFunction-class}},
\code{\link{CompleteBernsteinFunction-class}},
\code{\link{GammaBernsteinFunction-class}},
\code{\link{InverseGaussianBernsteinFunction-class}},
\code{\link{LevyBernsteinFunction-class}},
\code{\link{ParetoBernsteinFunction-class}},
\code{\link{PoissonBernsteinFunction-class}}

Other Complete Bernstein function classes: 
\code{\link{AlphaStableBernsteinFunction-class}},
\code{\link{GammaBernsteinFunction-class}},
\code{\link{InverseGaussianBernsteinFunction-class}}

Other Algebraic Bernstein function classes: 
\code{\link{AlphaStableBernsteinFunction-class}},
\code{\link{InverseGaussianBernsteinFunction-class}},
\code{\link{ParetoBernsteinFunction-class}}
}
\concept{Algebraic Bernstein function classes}
\concept{Bernstein function classes}
\concept{Complete Bernstein function classes}
\concept{Levy Bernstein function classes}
