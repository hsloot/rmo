% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/allClass-S4.R, R/allInitialize-S4.R,
%   R/levyDensity-S4.R, R/valueOf-S4.R
\docType{class}
\name{PoissonBernsteinFunction-class}
\alias{PoissonBernsteinFunction-class}
\alias{PoissonBernsteinFunction}
\alias{initialize,PoissonBernsteinFunction-method}
\alias{initialize,PoissonBernsteinFunction,ANY-method}
\alias{levyDensity,PoissonBernsteinFunction-method}
\alias{valueOf,PoissonBernsteinFunction-method}
\alias{valueOf,PoissonBernsteinFunction,ANY-method}
\title{Class for the \emph{Poisson Bernstein function}}
\usage{
\S4method{initialize}{PoissonBernsteinFunction}(.Object, eta = 1, lambda = 1)

\S4method{levyDensity}{PoissonBernsteinFunction}(object)

\S4method{valueOf}{PoissonBernsteinFunction}(
  object,
  x,
  difference_order = 0L,
  cscale = 1,
  n = 1,
  k = 0,
  ...,
  method = c("default", "levy")
)
}
\arguments{
\item{.Object}{ An object:  see the \dQuote{Initialize Methods} section.}

\item{eta}{Positive number.}

\item{lambda}{Positive number}

\item{object}{An object deriving from \linkS4class{LevyBernsteinFunction}
(for \code{levyDensity}) or \linkS4class{CompleteBernsteinFunction}
(for \code{stieltjesDensity}).}

\item{x}{Non-negativ numeric vector at which the iterated difference of
the Bernstein function is evaluated.}

\item{difference_order}{The order of the alternating iterated forward
differences taken on the Bernstein function (\eqn{j} in
the representation).}

\item{cscale}{Positive number, the composit scaling factor.}

\item{n}{k Non-negative numbers for the binomial factors.}

\item{...}{arguments to specify properties of the new object, to
      be passed to \code{initialize()}.}

\item{method}{Method to calculate the result; use \code{method = "levy"} for
using the Lévy representation and \code{method = "stieltjes"} for using the
Stieltjes representation.}
}
\description{
The Poisson process with arrival-rate \eqn{\lambda} and fixed jump size
\eqn{\eta} is a Lévy subordinator corresponding to the Bernstein function
\deqn{
  \psi(x) = \lambda (1 - e^{-x\eta}) , x>0.
}
}
\details{
For the Poisson Bernstein function, the higher-order alternatig iterated
foward differences can be calculated in closed form:
\deqn{
  {(-1)}^{k-1} \Delta^k \psi(x) = e^{-u\eta} (1-e^{-\eta})^k, x>0, k>0.
}
}
\section{Functions}{
\itemize{
\item \code{initialize,PoissonBernsteinFunction-method}: Constructor

\item \code{levyDensity,PoissonBernsteinFunction-method}: see \linkS4class{LevyBernsteinFunction}

\item \code{valueOf,PoissonBernsteinFunction-method}: Calculates the iterated differences of the Bernstein function, see \code{\link[=valueOf]{valueOf()}}.
The default method for calculating the iterated differences uses the
Lévy representation.
}}

\section{Slots}{

\describe{
\item{\code{lambda}}{The (positive) arrival rate of the underlying Poisson process.}

\item{\code{eta}}{The fixed (positive) jump size of the Poisson process.}
}}

\section{Lévy density}{

\deqn{
  \nu(du)
    = \lambda \delta_{\eta}(du), \quad u > 0 .
}
}

\examples{
PoissonBernsteinFunction()
PoissonBernsteinFunction(lambda = 0.2, eta = 2)
}
\seealso{
\linkS4class{BernsteinFunction}, \linkS4class{LevyBernsteinFunction}
\code{\link[=valueOf]{valueOf()}}
}
