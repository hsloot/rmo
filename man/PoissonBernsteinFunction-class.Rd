% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s4-PoissonBernsteinFunction.R
\docType{class}
\name{PoissonBernsteinFunction-class}
\alias{PoissonBernsteinFunction-class}
\alias{PoissonBernsteinFunction}
\title{Class for Poisson Bernstein functions}
\description{
The Poisson process with arrival-rate \eqn{\lambda} and fixed jump size
\eqn{\eta} is a Lévy subordinator corresponding to the Bernstein function
\deqn{
  \psi(x) = 1 - e^{-x\eta}, x>0.
}
}
\details{
For the Poisson Bernstein function, the higher-order alternating iterated
forward differences can be calculated in closed form:
\deqn{
  {(-1)}^{k-1} \Delta^k \psi(x) = e^{-u\eta} (1-e^{-\eta})^k, x>0, k>0.
}
\subsection{Lévy density}{

\deqn{
  \nu(du)
    = \lambda \delta_{\eta}(du), \quad u > 0 .
}
}
}
\section{Slots}{

\describe{
\item{\code{lambda}}{The (positive) arrival rate of the underlying Poisson process.}

\item{\code{eta}}{The fixed (positive) jump size of the Poisson process.}
}}

\examples{
# Create an object of class PoissonBernsteinFunction
PoissonBernsteinFunction()
PoissonBernsteinFunction(eta = 2)

# Create a Lévy density
bf <- PoissonBernsteinFunction(eta = 0.7)
levy_density <- levyDensity(bf)
sum(levy_density$y * pmin(1, levy_density$x))

# Evaluate the Bernstein function
bf <- PoissonBernsteinFunction(eta = 0.3)
valueOf(bf, 1:5)

# Calculate shock-arrival intensities
bf <- PoissonBernsteinFunction(eta = 0.8)
intensities(bf, 3)
intensities(bf, 3, tolerance = 1e-4)

# Calculate exchangeable shock-arrival intensities
bf <- PoissonBernsteinFunction(eta = 0.4)
uexIntensities(bf, 3)
uexIntensities(bf, 3, tolerance = 1e-4)

# Calculate exchangeable shock-size arrival intensities
bf <- PoissonBernsteinFunction(eta = 0.2)
exIntensities(bf, 3)
exIntensities(bf, 3, tolerance = 1e-4)

# Calculate the Markov generator
bf <- PoissonBernsteinFunction(eta = 0.6)
exQMatrix(bf, 3)
exQMatrix(bf, 3, tolerance = 1e-4)
}
\seealso{
\code{\link[=levyDensity]{levyDensity()}},  \code{\link[=valueOf]{valueOf()}}, \code{\link[=intensities]{intensities()}}, \code{\link[=uexIntensities]{uexIntensities()}},
\code{\link[=exIntensities]{exIntensities()}}, \code{\link[=exQMatrix]{exQMatrix()}}, \code{\link[=rextmo]{rextmo()}}, \code{\link[=rpextmo]{rpextmo()}}

Other Bernstein function classes: 
\code{\link{AlphaStableBernsteinFunction-class}},
\code{\link{BernsteinFunction-class}},
\code{\link{CompleteBernsteinFunction-class}},
\code{\link{CompositeScaledBernsteinFunction-class}},
\code{\link{ConstantBernsteinFunction-class}},
\code{\link{ConvexCombinationOfBernsteinFunctions-class}},
\code{\link{ExponentialBernsteinFunction-class}},
\code{\link{GammaBernsteinFunction-class}},
\code{\link{InverseGaussianBernsteinFunction-class}},
\code{\link{LevyBernsteinFunction-class}},
\code{\link{LinearBernsteinFunction-class}},
\code{\link{ParetoBernsteinFunction-class}},
\code{\link{ScaledBernsteinFunction-class}},
\code{\link{SumOfBernsteinFunctions-class}}

Other Levy Bernstein function classes: 
\code{\link{AlphaStableBernsteinFunction-class}},
\code{\link{CompleteBernsteinFunction-class}},
\code{\link{ExponentialBernsteinFunction-class}},
\code{\link{GammaBernsteinFunction-class}},
\code{\link{InverseGaussianBernsteinFunction-class}},
\code{\link{LevyBernsteinFunction-class}},
\code{\link{ParetoBernsteinFunction-class}}

Other Bernstein function boundary classes: 
\code{\link{ConstantBernsteinFunction-class}},
\code{\link{LinearBernsteinFunction-class}}
}
\concept{Bernstein function boundary classes}
\concept{Bernstein function classes}
\concept{Levy Bernstein function classes}
