% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/s4-BernsteinFunction.R,
%   R/s4-LevyBernsteinFunction.R, R/s4-CompleteBernsteinFunction.R,
%   R/s4-AlphaStableBernsteinFunction.R,
%   R/s4-CompositeScaledBernsteinFunction.R, R/s4-ConstantBernsteinFunction.R,
%   R/s4-ConvexCombinationOfBernsteinFunctions.R,
%   R/s4-ExponentialBernsteinFunction.R, R/s4-GammaBernsteinFunction.R,
%   R/s4-InverseGaussianBernsteinFunction.R, R/s4-LinearBernsteinFunction.R,
%   R/s4-ParetoBernsteinFunction.R, R/s4-PoissonBernsteinFunction.R,
%   R/s4-ScaledBernsteinFunction.R, R/s4-SumOfBernsteinFunctions.R
\docType{methods}
\name{hidden_aliases}
\alias{hidden_aliases}
\alias{uexIntensities,BernsteinFunction-method}
\alias{exIntensities,BernsteinFunction-method}
\alias{intensities,BernsteinFunction-method}
\alias{exQMatrix,BernsteinFunction-method}
\alias{valueOf,LevyBernsteinFunction-method}
\alias{valueOf,CompleteBernsteinFunction-method}
\alias{initialize,AlphaStableBernsteinFunction-method}
\alias{show,AlphaStableBernsteinFunction-method}
\alias{levyDensity,AlphaStableBernsteinFunction-method}
\alias{stieltjesDensity,AlphaStableBernsteinFunction-method}
\alias{initialize,CompositeScaledBernsteinFunction-method}
\alias{show,CompositeScaledBernsteinFunction-method}
\alias{valueOf,CompositeScaledBernsteinFunction-method}
\alias{initialize,ConstantBernsteinFunction-method}
\alias{show,ConstantBernsteinFunction-method}
\alias{valueOf,ConstantBernsteinFunction-method}
\alias{initialize,ConvexCombinationOfBernsteinFunctions-method}
\alias{show,ConvexCombinationOfBernsteinFunctions-method}
\alias{valueOf,ConvexCombinationOfBernsteinFunctions-method}
\alias{initialize,ExponentialBernsteinFunction-method}
\alias{show,ExponentialBernsteinFunction-method}
\alias{levyDensity,ExponentialBernsteinFunction-method}
\alias{stieltjesDensity,ExponentialBernsteinFunction-method}
\alias{initialize,GammaBernsteinFunction-method}
\alias{show,GammaBernsteinFunction-method}
\alias{levyDensity,GammaBernsteinFunction-method}
\alias{stieltjesDensity,GammaBernsteinFunction-method}
\alias{initialize,InverseGaussianBernsteinFunction-method}
\alias{show,InverseGaussianBernsteinFunction-method}
\alias{levyDensity,InverseGaussianBernsteinFunction-method}
\alias{stieltjesDensity,InverseGaussianBernsteinFunction-method}
\alias{initialize,LinearBernsteinFunction-method}
\alias{show,LinearBernsteinFunction-method}
\alias{valueOf,LinearBernsteinFunction-method}
\alias{initialize,ParetoBernsteinFunction-method}
\alias{show,ParetoBernsteinFunction-method}
\alias{levyDensity,ParetoBernsteinFunction-method}
\alias{initialize,PoissonBernsteinFunction-method}
\alias{show,PoissonBernsteinFunction-method}
\alias{levyDensity,PoissonBernsteinFunction-method}
\alias{initialize,ScaledBernsteinFunction-method}
\alias{show,ScaledBernsteinFunction-method}
\alias{valueOf,ScaledBernsteinFunction-method}
\alias{initialize,SumOfBernsteinFunctions-method}
\alias{show,SumOfBernsteinFunctions-method}
\alias{valueOf,SumOfBernsteinFunctions-method}
\title{For S4 methods that require a documentation entry but only clutter the index.}
\usage{
\S4method{uexIntensities}{BernsteinFunction}(object, d, cscale = 1, ...)

\S4method{exIntensities}{BernsteinFunction}(object, d, cscale = 1, ...)

\S4method{intensities}{BernsteinFunction}(object, d, cscale = 1, ...)

\S4method{exQMatrix}{BernsteinFunction}(object, d, cscale = 1, ...)

\S4method{valueOf}{LevyBernsteinFunction}(
  object,
  x,
  difference_order,
  n = 1L,
  k = 0L,
  cscale = 1,
  ...,
  method = c("default", "levy"),
  tolerance = .Machine$double.eps^0.5
)

\S4method{valueOf}{CompleteBernsteinFunction}(
  object,
  x,
  difference_order,
  n = 1L,
  k = 0L,
  cscale = 1,
  ...,
  method = c("default", "stieltjes", "levy"),
  tolerance = .Machine$double.eps^0.5
)

\S4method{initialize}{AlphaStableBernsteinFunction}(.Object, alpha)

\S4method{show}{AlphaStableBernsteinFunction}(object)

\S4method{levyDensity}{AlphaStableBernsteinFunction}(object)

\S4method{stieltjesDensity}{AlphaStableBernsteinFunction}(object)

\S4method{initialize}{CompositeScaledBernsteinFunction}(.Object, cscale, original)

\S4method{show}{CompositeScaledBernsteinFunction}(object)

\S4method{valueOf}{CompositeScaledBernsteinFunction}(object, x, difference_order = 0L, n = 1, k = 0, cscale = 1, ...)

\S4method{initialize}{ConstantBernsteinFunction}(.Object, constant)

\S4method{show}{ConstantBernsteinFunction}(object)

\S4method{valueOf}{ConstantBernsteinFunction}(object, x, difference_order = 0L, n = 1L, k = 0L, cscale = 1, ...)

\S4method{initialize}{ConvexCombinationOfBernsteinFunctions}(.Object, coefficients, points)

\S4method{show}{ConvexCombinationOfBernsteinFunctions}(object)

\S4method{valueOf}{ConvexCombinationOfBernsteinFunctions}(object, x, difference_order = 0L, n = 1L, k = 0L, cscale = 1, ...)

\S4method{initialize}{ExponentialBernsteinFunction}(.Object, lambda)

\S4method{show}{ExponentialBernsteinFunction}(object)

\S4method{levyDensity}{ExponentialBernsteinFunction}(object)

\S4method{stieltjesDensity}{ExponentialBernsteinFunction}(object)

\S4method{initialize}{GammaBernsteinFunction}(.Object, a)

\S4method{show}{GammaBernsteinFunction}(object)

\S4method{levyDensity}{GammaBernsteinFunction}(object)

\S4method{stieltjesDensity}{GammaBernsteinFunction}(object)

\S4method{initialize}{InverseGaussianBernsteinFunction}(.Object, eta)

\S4method{show}{InverseGaussianBernsteinFunction}(object)

\S4method{levyDensity}{InverseGaussianBernsteinFunction}(object)

\S4method{stieltjesDensity}{InverseGaussianBernsteinFunction}(object)

\S4method{initialize}{LinearBernsteinFunction}(.Object, scale)

\S4method{show}{LinearBernsteinFunction}(object)

\S4method{valueOf}{LinearBernsteinFunction}(object, x, difference_order = 0L, n = 1L, k = 0L, cscale = 1, ...)

\S4method{initialize}{ParetoBernsteinFunction}(.Object, alpha, x0)

\S4method{show}{ParetoBernsteinFunction}(object)

\S4method{levyDensity}{ParetoBernsteinFunction}(object)

\S4method{initialize}{PoissonBernsteinFunction}(.Object, eta)

\S4method{show}{PoissonBernsteinFunction}(object)

\S4method{levyDensity}{PoissonBernsteinFunction}(object)

\S4method{initialize}{ScaledBernsteinFunction}(.Object, scale, original)

\S4method{show}{ScaledBernsteinFunction}(object)

\S4method{valueOf}{ScaledBernsteinFunction}(object, x, difference_order = 0L, n = 1L, k = 0L, cscale = 1, ...)

\S4method{initialize}{SumOfBernsteinFunctions}(.Object, first, second)

\S4method{show}{SumOfBernsteinFunctions}(object)

\S4method{valueOf}{SumOfBernsteinFunctions}(object, x, difference_order = 0L, n = 1L, k = 0L, cscale = 1, ...)
}
\arguments{
\item{object}{An object deriving from \linkS4class{LevyBernsteinFunction}
(for \code{levyDensity}) or \linkS4class{CompleteBernsteinFunction}
(for \code{stieltjesDensity}).}

\item{d}{a positive integer, larger than two, for the \emph{dimension}.}

\item{cscale}{Positive number.}

\item{...}{pass-through parameter}

\item{x}{a nonnegativ numeric vector at which the iterated difference of
the Bernstein function is evaluated.}

\item{difference_order}{a nonnegative integer with the order of the
alternating iterated forward differences taken on the Bernstein function.}

\item{n, k}{nonnegative numbers for the binomial factor.}

\item{method}{Method to calculate the result; use \code{method = "levy"} for
using the Lévy representation and \code{method = "stieltjes"} for using the
Stieltjes representation.}

\item{tolerance}{(Relative) tolerance, passed down to \code{\link[stats:integrate]{stats::integrate()}}}

\item{.Object}{ An object:  see the \dQuote{Initialize Methods} section.}

\item{alpha}{Positive number between zero and one (bounds excl.).}

\item{original}{Derives from \linkS4class{BernsteinFunction}.}

\item{constant}{Nonnegative number.}

\item{coefficients}{Derives from
\linkS4class{ConvexCombinationOfBernsteinFunctions}.}

\item{points}{Derives from \linkS4class{ConvexCombinationOfBernsteinFunctions}.}

\item{lambda}{Positive number.}

\item{a}{Positive number.}

\item{eta}{Positive number.}

\item{scale}{Positive number.}

\item{x0}{Positive number.}

\item{first}{Derives from \linkS4class{BernsteinFunction}.}

\item{second}{Derives from \linkS4class{BernsteinFunction}.}
}
\description{
For S4 methods that require a documentation entry but only clutter the index.
}
\details{
\subsection{Evaluation of Bernstein functions with Lévy densities}{

For \emph{continuous Lévy densities}, the values of the Bernstein function are
calculated with \code{\link[stats:integrate]{stats::integrate()}} by using the representation
\deqn{
  \psi(x)
    = \int_{0}^{\infty} (1 - \operatorname{e}^{-ux}) \nu(du), \quad x > 0 ,
}
and the values of the iterated differences are calculated by using the
representation
\deqn{
  (-1)^{j-1} \Delta^{j} \psi(x)
    = \int_{0}^{\infty}
      \operatorname{e}^{-ux} (1 - \operatorname{e}^{-u})^j \nu(du) ,
    \quad x > 0 .
}

For \emph{discrete Lévy densities} \eqn{\nu(du) = \sum_{i} y_i \delta_{u_i}(du)},
the values of the Bernstein function are calculated by using the
representation
\deqn{
  \psi(x)
    = \sum_{i} (1 - \operatorname{e}^{-u_i x}) y_i, \quad x > 0 ,
}
and the values of the iterated differences are calculated by using the
representation
\deqn{
  (-1)^{j-1} \Delta^{j} \psi(x)
    = \sum_{i} \operatorname{e}^{-u_i x} (1 - \operatorname{e}^{-u_i})^j y_i,
    \quad x > 0 .
}
}

\subsection{Evaluation of Complete Bernstein functions}{

For \emph{continuous Stieltjes densities}, the values of the Bernstein function
are calculated with \code{\link[stats:integrate]{stats::integrate()}} by using the representation
\deqn{
  \psi(x)
    = \int_{0}^{\infty} x \mathrm{Beta}(1, x + u) \sigma(du), \quad x > 0 ,
}
and the values of the iterated differences are calculated by using the
representation
\deqn{
  (-1)^{j-1} \Delta^{j} \psi(x)
    = \int_{0}^{\infty} u \mathrm{Beta}(j+1, x + u) \sigma(du) ,
    \quad x > 0 .
}

For \emph{discrete Lévy densities}
\eqn{\sigma(du) = \sum_{i} y_i \delta_{u_i}(du)},
the values of the Bernstein function are calculated by using the
representation
\deqn{
  \psi(x)
    = \sum_{i} x \mathrm{Beta}(1, x + u_i) y_i, \quad x > 0 ,
}
and the values of the iterated differences are calculated by using the
representation
\deqn{
  (-1)^{j-1} \Delta^{j} \psi(x)
    = \sum_{i} u_i \mathrm{Beta}(j+1, x + u_i) y_i ,
    \quad x > 0 .
}
}
}
\keyword{internal}
