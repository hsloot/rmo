% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample-rmo.R
\name{rmo}
\alias{rmo}
\title{Simulate from Marshall–Olkin distributions}
\usage{
rmo(n, d, lambda, method = c("AM", "ESM"))
}
\arguments{
\item{n}{An integer for the \emph{number of samples}.}

\item{d}{An integer for the \emph{dimension}.}

\item{lambda}{A numeric vector for the \emph{shock-arrival intensities}.}

\item{method}{A string indicating which sampling algorithm should be used.
Use \code{"AM"} for the \emph{Arnold model} and \code{"ESM"} for the \emph{exogenous shock
model}. We recommend using the \emph{ESM} for small dimensions only; the \emph{AM}
can be used up until dimension \eqn{30}.}
}
\value{
\code{rmo} returns a numeric matrix of size \code{n} x \code{d}. Each row corresponds to an
independently and identically (iid) distributed sample from a \code{d}-variate
\emph{Marshall–Olkin distribution} with specified parameters.
}
\description{
Draws \code{n} iid samples from a \code{d}-variate \emph{Marshall–Olkin distribution}
parametrized by a vector of \emph{shock-arrival intensities}.
}
\details{
The \emph{Marshall–Olkin distribution} was introduced in
\insertCite{Marshall1967a}{rmo}. It is characterized by the survival
function:
\deqn{
    \bar{F}{(t)}
        = \exp{\left\{ - \sum_{I} \lambda_I \max_{i \in I} t_i \right\}},
            \quad t = {(t_{1}, \ldots, t_{d})} > 0,
}
for \emph{shock-arrival intensities} \eqn{\lambda_I \geq 0},
\eqn{\emptyset \neq I \subseteq {\{ 1 , \ldots, d \}}}.
The shock-arrival intensities correspond to the rates of independent
exponential random variables in the \emph{exogenous shock model (ESM)}. If
\eqn{\lambda_{I}} is zero, it means that the shock \eqn{I} never arrives.

To map subsets of \eqn{{\{ 1, \ldots, d\}}} to integers
\eqn{0, \ldots, 2^d-1}, we use a binary representation:
\deqn{
  I \equiv \sum_{k \in I}{ 2^{k-1} }
}
\subsection{Simulation algorithms}{
\itemize{
\item The \emph{exogenous shock model (ESM)} is a simulation algorithm for generating
samples from a Marshall–Olkin distributed random vector. It works by
generating independent exponentially distributed shock arrival times for
all non-empty subsets of components. Each component's death time is then
defined as the minimum of all shock arrival times corresponding to a subset
containing that component. See \insertCite{Marshall1967a}{rmo}.
\item The \emph{Arnold model (AM)} is a simulation algorithm used to generate samples
from a Marshall–Olkin distributed random vector. It simulates a marked
homogeneous Poisson process with set-valued marks, where the process is
stopped when all components are hit by a shock. See
\insertCite{Arnold1975a}{rmo}.
}

\insertNoCite{Mai2017a}{rmo}
}
}
\examples{
rmo(
  10, 3,
  c(0.4, 0.4, 0.1, 0.4, 0.1, 0.1, 0.4)
)
## independence
rmo(
  10, 3,
  c(1, 1, 0, 1, 0, 0, 0)
)
## comonotone
rmo(
  10, 3,
  c(0, 0, 0, 0, 0, 0, 1)
)

rmo(
  10, 3,
  c(0.4, 0.4, 0.1, 0.4, 0.1, 0.1, 0.4),
  method = "ESM"
)
## independence
rmo(
  10, 3,
  c(1, 1, 0, 1, 0, 0, 0),
  method = "ESM"
)
## comonotone
rmo(
  10, 3,
  c(0, 0, 0, 0, 0, 0, 1),
  method = "ESM"
)

rmo(
  10, 3,
  c(0.4, 0.4, 0.1, 0.4, 0.1, 0.1, 0.4),
  method = "AM"
)
## independence
rmo(
  10, 3,
  c(1, 1, 0, 1, 0, 0, 0),
  method = "AM"
)
## comonotone
rmo(
  10, 3,
  c(0, 0, 0, 0, 0, 0, 1),
  method = "AM"
)
}
\references{
\insertAllCited{}
}
\seealso{
Other sampling-algorithms: 
\code{\link{rexmo}()},
\code{\link{rextmo}()},
\code{\link{rpextmo}()}
}
\concept{sampling-algorithms}
